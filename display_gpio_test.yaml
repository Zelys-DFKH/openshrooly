# Display GPIO Test - Shows button presses on screen
esphome:
  name: display-gpio-test
  friendly_name: Display GPIO Test
  project:
    name: "test.display-gpio"
    version: "1.0.0"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: recommended

logger:
  level: DEBUG

api:

ota:
  - platform: esphome

wifi:
  ap:
    ssid: "Display-GPIO-Test"
    password: "shrooly123"

captive_portal:

# Working I2C for sensors
i2c:
  sda: GPIO36
  scl: GPIO35
  scan: true
  id: bus_a
  frequency: 100khz

spi:
  clk_pin: GPIO7
  mosi_pin: GPIO6

font:
  - file: fonts/arial.ttf
    id: font_medium
    size: 12
  - file: fonts/arial.ttf
    id: font_small
    size: 9

display:
  - platform: waveshare_epaper
    id: my_display
    cs_pin: GPIO8
    dc_pin: GPIO48
    busy_pin: GPIO38
    reset_pin: GPIO21
    rotation: 90°
    model: 2.90inv2-r2
    update_interval: never
    lambda: |-
      it.print(5, 5, id(font_medium), "GPIO BUTTON TEST");
      it.printf(5, 20, id(font_small), "T:%.1f°C H:%.1f%%", id(temperature).state, id(humidity).state);
      
      it.print(5, 35, id(font_small), "Press buttons & watch:");
      
      // Show last 4 detected GPIO presses
      int y_pos = 50;
      for (int i = 0; i < 4; i++) {
        if (id(last_pressed_gpios)[i] != -1) {
          it.printf(5, y_pos, id(font_small), "Button %d: GPIO%d", i+1, id(last_pressed_gpios)[i]);
          y_pos += 12;
        }
      }
      
      it.printf(5, 100, id(font_small), "Total presses: %d", id(total_presses));

sensor:
  - platform: sht4x
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temperature
    humidity:
      name: "Humidity"
      id: humidity
    address: 0x44
    update_interval: 10s

globals:
  - id: total_presses
    type: int
    restore_value: false
    initial_value: '0'
  - id: last_pressed_gpios
    type: int[4]
    restore_value: false

script:
  - id: record_button_press
    parameters:
      gpio_num: int
    then:
      - lambda: |-
          // Shift array left and add new GPIO
          for (int i = 0; i < 3; i++) {
            id(last_pressed_gpios)[i] = id(last_pressed_gpios)[i+1];
          }
          id(last_pressed_gpios)[3] = gpio_num;
          id(total_presses)++;
          ESP_LOGE("button", "🟢 BUTTON DETECTED: GPIO%d (Total: %d)", gpio_num, id(total_presses));
      - component.update: my_display

binary_sensor:
  # Test key ESP32-S3 GPIO pins with display feedback
  
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO0"
    id: gpio0_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 0

  - platform: gpio
    pin:
      number: GPIO1
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO1"
    id: gpio1_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 1

  - platform: gpio
    pin:
      number: GPIO2
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO2"
    id: gpio2_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 2

  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO3"
    id: gpio3_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 3

  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO4"
    id: gpio4_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 4

  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO5"
    id: gpio5_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 5

  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO9"
    id: gpio9_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 9

  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO10"
    id: gpio10_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 10

  - platform: gpio
    pin:
      number: GPIO11
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO11"
    id: gpio11_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 11

  - platform: gpio
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO12"
    id: gpio12_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 12

  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO13"
    id: gpio13_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 13

  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO14"
    id: gpio14_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 14

  - platform: gpio
    pin:
      number: GPIO15
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO15"
    id: gpio15_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 15

  - platform: gpio
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO16"
    id: gpio16_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 16

  - platform: gpio
    pin:
      number: GPIO17
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO17"
    id: gpio17_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 17

  - platform: gpio
    pin:
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO18"
    id: gpio18_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 18

  - platform: gpio
    pin:
      number: GPIO40
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO40"
    id: gpio40_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 40

  - platform: gpio
    pin:
      number: GPIO41
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO41"
    id: gpio41_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 41

  - platform: gpio
    pin:
      number: GPIO42
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO42"
    id: gpio42_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 42

  - platform: gpio
    pin:
      number: GPIO43
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO43"
    id: gpio43_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 43

  - platform: gpio
    pin:
      number: GPIO44
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO44"
    id: gpio44_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 44

  - platform: gpio
    pin:
      number: GPIO45
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO45"
    id: gpio45_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 45

  - platform: gpio
    pin:
      number: GPIO46
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO46"
    id: gpio46_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 46

  - platform: gpio
    pin:
      number: GPIO47
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO47"
    id: gpio47_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 47

# Also test pull-down configuration
  - platform: gpio
    pin:
      number: GPIO39
      mode: INPUT_PULLDOWN
      inverted: false
    name: "GPIO39 PULLDOWN"
    id: gpio39_btn
    on_press:
      - script.execute:
          id: record_button_press
          gpio_num: 39

interval:
  - interval: 30s
    then:
      - logger.log: 
          format: "🔍 Display GPIO Test - Press buttons to see results on screen!"
          level: ERROR