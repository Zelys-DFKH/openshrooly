# Strict Button Test - Only detect actual button presses, ignore sensor noise
esphome:
  name: strict-button-test
  friendly_name: Strict Button Test
  project:
    name: "test.strict-buttons"
    version: "1.0.0"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: recommended

logger:
  level: DEBUG

wifi:
  ap:
    ssid: "Strict-Button-Test"
    password: "shrooly123"

spi:
  clk_pin: GPIO7
  mosi_pin: GPIO6

font:
  - file: fonts/arial.ttf
    id: font_medium
    size: 12

display:
  - platform: waveshare_epaper
    id: my_display
    cs_pin: GPIO8
    dc_pin: GPIO48
    busy_pin: GPIO38
    reset_pin: GPIO21
    rotation: 90°
    model: 2.90inv2-r2
    update_interval: never
    lambda: |-
      it.print(5, 5, id(font_medium), "STRICT BUTTON TEST");
      it.printf(5, 25, id(font_medium), "Last GPIO: %d", id(last_gpio));
      it.printf(5, 45, id(font_medium), "Confirmed Presses: %d", id(press_count));
      
      // Show confirmed button presses only
      int y = 65;
      for (int i = 0; i < 4; i++) {
        if (id(confirmed_buttons)[i] != -1) {
          it.printf(5, y, id(font_medium), "Btn %d: GPIO%d", i+1, id(confirmed_buttons)[i]);
          y += 15;
        }
      }

globals:
  - id: press_count
    type: int
    restore_value: false
    initial_value: '0'
  - id: last_gpio
    type: int
    restore_value: false
    initial_value: '-1'
  - id: confirmed_buttons
    type: int[4]
    restore_value: false

script:
  - id: confirm_button
    parameters:
      gpio_num: int
    then:
      - lambda: |-
          // Only record if this is a new button press (debounce)
          bool is_new = true;
          for (int i = 0; i < 4; i++) {
            if (id(confirmed_buttons)[i] == gpio_num) {
              is_new = false;
              break;
            }
          }
          if (is_new || id(press_count) < 4) {
            // Shift array and add new button
            for (int i = 0; i < 3; i++) {
              id(confirmed_buttons)[i] = id(confirmed_buttons)[i+1];
            }
            id(confirmed_buttons)[3] = gpio_num;
            id(last_gpio) = gpio_num;
            id(press_count)++;
            ESP_LOGE("BUTTON", "✅ CONFIRMED BUTTON: GPIO%d", gpio_num);
          }
      - component.update: my_display

binary_sensor:
  # Test only the most likely button GPIO pins with strict filtering
  # Avoid pins used by I2C (35, 36) and SPI (6, 7, 8)
  
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO0"
    filters:
      - delayed_on: 50ms  # Debounce - must be pressed for 50ms
      - delayed_off: 50ms # Must be released for 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 0

  - platform: gpio
    pin:
      number: GPIO1
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO1"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 1

  - platform: gpio
    pin:
      number: GPIO2
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO2"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 2

  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO3"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 3

  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO4"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 4

  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO5"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 5

  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO9"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 9

  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO10"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 10

  - platform: gpio
    pin:
      number: GPIO11
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO11"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 11

  - platform: gpio
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO12"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 12

  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO13"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 13

  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO14"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 14

  - platform: gpio
    pin:
      number: GPIO15
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO15"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 15

  - platform: gpio
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO16"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 16

  - platform: gpio
    pin:
      number: GPIO17
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO17"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 17

  - platform: gpio
    pin:
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    name: "Button GPIO18"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - script.execute:
          id: confirm_button
          gpio_num: 18