# Extensive GPIO Button Test - Test ALL available ESP32-S3 pins
esphome:
  name: gpio-button-test
  friendly_name: GPIO Button Test
  project:
    name: "test.gpio-buttons"
    version: "1.0.0"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: recommended

logger:
  level: DEBUG

api:

ota:
  - platform: esphome

wifi:
  ap:
    ssid: "GPIO-Button-Test"
    password: "shrooly123"

captive_portal:
web_server:
  port: 80

# Working I2C for sensors (keep this)
i2c:
  sda: GPIO36
  scl: GPIO35
  scan: true
  id: bus_a
  frequency: 100khz

spi:
  clk_pin: GPIO7
  mosi_pin: GPIO6

font:
  - file: fonts/arial.ttf
    id: font_medium
    size: 12
  - file: fonts/arial.ttf
    id: font_small
    size: 10

display:
  - platform: waveshare_epaper
    id: my_display
    cs_pin: GPIO8
    dc_pin: GPIO48
    busy_pin: GPIO38
    reset_pin: GPIO21
    rotation: 90춿
    model: 2.90inv2-r2
    update_interval: 60s
    lambda: |-
      it.print(5, 5, id(font_medium), "GPIO BUTTON TEST");
      it.print(5, 20, id(font_small), "Temp/Humidity Working!");
      it.printf(5, 35, id(font_small), "T:%.1f춿C H:%.1f%%", id(temperature).state, id(humidity).state);
      it.print(5, 50, id(font_small), "Testing GPIO pins...");
      it.print(5, 65, id(font_small), "Press ALL buttons!");
      it.print(5, 80, id(font_small), "Check web interface");
      it.print(5, 95, id(font_small), "at 192.168.4.1");

sensor:
  - platform: sht4x
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temperature
    humidity:
      name: "Humidity"
      id: humidity
    address: 0x44
    update_interval: 10s

  - platform: template
    name: "Button Press Count"
    id: press_counter
    lambda: return id(button_press_count);
    update_interval: 5s

globals:
  - id: button_press_count
    type: int
    restore_value: false
    initial_value: '0'

binary_sensor:
  # Test ALL available ESP32-S3 GPIO pins
  # Avoiding pins used by SPI, I2C, and display
  
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO0 Button"
    id: gpio0_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO0!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO1
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO1 Button"
    id: gpio1_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO1!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO2
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO2 Button"
    id: gpio2_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO2!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO3 Button"
    id: gpio3_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO3!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO4 Button"
    id: gpio4_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO4!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO5 Button (Reset)"
    id: gpio5_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO5 (RESET)!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO9 Button"
    id: gpio9_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO9!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO10 Button"
    id: gpio10_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO10!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO11
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO11 Button"
    id: gpio11_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO11!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO12 Button"
    id: gpio12_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO12!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO13 Button"
    id: gpio13_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO13!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO14 Button"
    id: gpio14_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO14!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO15
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO15 Button"
    id: gpio15_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO15!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO16 Button"
    id: gpio16_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO16!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO17
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO17 Button"
    id: gpio17_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO17!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO18 Button"
    id: gpio18_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO18!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO40
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO40 Button"
    id: gpio40_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO40!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO41
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO41 Button"
    id: gpio41_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO41!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO42
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO42 Button"
    id: gpio42_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO42!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO43
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO43 Button"
    id: gpio43_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO43!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO44
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO44 Button"
    id: gpio44_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO44!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO45
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO45 Button"
    id: gpio45_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO45!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO46
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO46 Button"
    id: gpio46_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO46!"
      - lambda: id(button_press_count)++;

  - platform: gpio
    pin:
      number: GPIO47
      mode: INPUT_PULLUP
      inverted: true
    name: "GPIO47 Button"
    id: gpio47_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO47!"
      - lambda: id(button_press_count)++;

# Also test with different pull configurations
  - platform: gpio
    pin:
      number: GPIO39
      mode: INPUT_PULLDOWN
      inverted: false
    name: "GPIO39 Button (PULLDOWN)"
    id: gpio39_btn
    on_press:
      - logger.log: "游릭 BUTTON FOUND: GPIO39 (PULLDOWN)!"
      - lambda: id(button_press_count)++;


# Show discovered pins in web interface  
text_sensor:
  - platform: template
    name: "Instructions"
    id: instructions
    lambda: |-
      return {"Press buttons - check which GPIO logs or increments count"};

interval:
  - interval: 30s
    then:
      - logger.log: 
          format: "游댌 GPIO BUTTON TEST ACTIVE - Press buttons to find working pins!"
          level: ERROR
      - logger.log:
          format: "游늵 Total button presses detected: %d"
          args: [ 'id(button_press_count)' ]
          level: ERROR